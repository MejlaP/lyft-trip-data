-- Examine the three tables.
-- SELECT * FROM trips;
-- SELECT * FROM riders;
-- SELECT * FROM cars;

-- SELECT riders.first, riders.last, cars.model
-- FROM riders, cars;
-- It combines each user with every car model - It is not useful.

-- Create a Trip Log with the trips and its users
-- SELECT *
-- FROM trips
-- LEFT JOIN riders
-- ON trips.rider_id = riders.id

-- Create a link between the trips and the cars used during those trips
-- SELECT *
-- FROM trips
-- INNER JOIN cars
-- ON trips.car_id = cars.id

-- Stack the riders table on top of the new table
-- SELECT *
-- FROM riders
-- UNION
-- SELECT *
-- FROM riders2;

-- Average cost for a trip
-- SELECT ROUND(AVG(cost),2) AS average_cost_for_trip
-- FROM trips

-- All the riders who have used Lyft less than 500 times
-- SELECT *
-- FROM riders
-- WHERE total_trips < 500
-- UNION
-- SELECT *
-- FROM riders2
-- WHERE total_trips < 500

-- Number of cars that are active
-- SELECT COUNT(*) AS count_active_cars
-- FROM cars
-- WHERE status = 'active';


-- Finds the two cars that have the highest trips_completed
-- SELECT *
-- FROM cars
-- ORDER BY trips_completed DESC
-- LIMIT 2;